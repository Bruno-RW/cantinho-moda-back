// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//* Connection
generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}


// Product
model Product {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(100)
  price           Decimal  @db.Decimal(14,2)
  size            String   @db.VarChar(45)
  description     String   
  especification  String   
  
  brandId     Int       @unique  // Foreign Key to Brand
  brand       Brand     @relation(fields: [brandId], references: [id])

  categoryId  Int       @unique  // Foreign Key to Category
  category    Category  @relation(fields: [categoryId], references: [id])

  favorite  Favorite[]  // Relation to Favorite

  @@index([id, brandId, categoryId])
}
model Brand {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(60)
  manufacturer  String   @db.VarChar(60)

  product  Product[]  // Relation to Product

  createdAt  DateTime  @default(now())
}
model Category {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(30)
  description  String?  @db.VarChar(60)

  product  Product[]  // Relation to Product

  createdAt  DateTime  @default(now())
}


// Client
model Client {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(60)
  email     String   @unique @db.VarChar(70)
  password  String   @db.VarChar(255)

  favorite  Favorite[] // Relation to Favorite

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([id])
}
model Favorite {
  id         Int      @id @default(autoincrement())
  active     Boolean  @default(false)

  productId  Int      @unique  // Foreign Key to Product
  product    Product  @relation(fields: [productId], references: [id])

  clientId     Int      @unique  // Foreign Key to Client
  client       Client   @relation(fields: [clientId], references: [id])

  createdAt  DateTime  @default(now())

  @@index([productId, clientId])
}


// Newsletter
model News {
  id     Int     @id @default(autoincrement())
  title  String  @db.VarChar(70) 
  body   String  

  createdAt  DateTime  @default(now())

  @@index([id])
}
model NewsClient {
  id      Int      @id @default(autoincrement())
  email   String   @unique @db.VarChar(70)
  active  Boolean  @default(false)
  count   Int      @default(0)

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([id])
}


// Company?


//? Admin users
model User {
  id        Int      @id @default(autoincrement())
  type      String   @db.Char(1)
  name      String   @db.VarChar(70)
  email     String   @unique @db.VarChar(70)
  password  String   @db.VarChar(255)

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}